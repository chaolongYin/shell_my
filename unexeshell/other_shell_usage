 Usage:
 other_shell normal_proj_tags_update : update normal cscope tags
 other_shell mtk_kk_old_kernel_tags_update : update mtk old android kernel tags
 ===================================================================================
 ==================calltree use command 1 ==========================================
 find . -name '*.c' -o -name '*.h' -o -name '*.java' -o -name '*.cpp' -o -name '*.cc' |  xargs calltree -gb -np -m [-dot] > tmp.dot
 calltree -b -dot -gb -np -m *.c > tmp.dot
 ===================================================================================
 ==================calltree use command 2 ==========================================
 calltree -gb -np [-dot] lf=start_kernel KERNEL_DIR/init/*.c  > tmp.dot
 ===================================================================================
 =================calltree use command 3 out to dot tool ===========================
 add -dot parameter in command then do like this:-dot  then  dot -T png tmp.dot -o haolongteset.png
 ===================================================================================
 ===================================================================================
 ===================================================================================
 ===================================================================================
 ===================================================================================
 ===================================================================================
 ==========================update MTK kernel tags command===========================
 find  mediatek/ kernel/ -name '*.c' -o -name '*.cpp' -o -name '*.h' -o -name '*.cc' -o -name '*.java'  -o -name '*.sh' -o -name '*.mk' -o -name '*.prop' -o -name '*.xml' -o -name '*config*' -o -name 'Makefile' -o -name '*.rc' -o -name 'platform' -o -name 'Drivers' -o -name '*.te' -o -name '*.py' -o -name '*.S' -o -name '*.mak' > cscope.files ; cscope -bkq -i cscope.files ;
 ===================================================================================
 ====================================================================================
 ==========================update other tags=========================================
 find . -name '*.c' -o -name '*.cpp' -o -name '*.h' -o -name '*.cc' -o -name '*.java'  -o -name '*.sh' -o -name '*.mk' -o -name '*.prop' -o -name '*.xml'  -o -name 'Makefile' -o -name '*.rc' -o -name 'platform' -o -name 'Drivers'  -o -name '*.scons' -o -name '*.api' -o -name '*.tla' -o -name '*.smh' -o -name '*.smi' -o -name '*.smt' -o -name '*.idl' -o -name '*.te' -o -name '*.py' -o -name '*.S' -o -name '*.mak' > cscope.files ; cscope -bkq -i cscope.files ;
 ===================================================================================
 ====================================================================================
 5 -- 函数被哪些地方引用     c ---
 6 -- c 符号被哪些地方引用   s ---
 7 -- 函数调用了哪些函数     d ---
 2 -- 文件路径               f ---
 10-- 字符串在哪些地方被引用 t ---
 12-- 跳到定义出             g ---
 ===================================================================================
 old ctags command, ctags -R
 you can update kernel cscope tags by ARCH eg:
 make cscope ARCH=arm
 ===================================================================================
[into factory] : input text *#*#13646633#*#*
[pdf key]:       9621073404
[touch i2c] :    /sys/devices/platform/mt-i2c.2/i2c-2/2-0015
[touch force up]: elan_iap /system/etc/14f0_1103.ekt 0x15 2k
[WLAN] iperf -c 192.168.1.100 -i 3 -t 120 –P 2 ; iperf -s -P 2
hicam it push command : git push origin hicam-baseline:refs/for/hicam-baseline"
===============================================================
 ==========================clean build android core ================================
 cd frameworks/base; git reset --hard ; croot; repo sync -j4; repo sync -j4; repo sync -j4; repo sync -j4; repo sync -j4; repo sync -j4; repo sync -j4; repo sync -j4; repo sync -j4; repo sync -j4; make update-api -j6 ;  make -j6
 ===================================================================================
 7zip: 7za a -t7z -mx=5 test.7z test-dir ; 7za X test.7z
 ===================================================================================
 gen ctags for Youcomplete: ctags --fields=+l -R
 ===================================================================================
 rename files:
 find | xargs rename 's/aaaaa/bbbbbbb/'
 ===================================================================================
 replace files:
 sed -i 's/aaa/bbbb/g' `grep -r aaa -rl .`
 sed -i 's/AAA/BBBB/g' `grep -r AAA -rl .`
 ===================================================================================
 vim save readonly file: w !sudo tee %
 ===================================================================================
 Batch Clear blank:
 sed -i 's/\s\+$//g' `grep -r "\s\+$" -rl .`
 ===================================================================================
 format code style
 find . -name *.c -o -name *.cpp -o -name *.h  | xargs indent [x]
 [x] maybe: indent -npro -gnu -i4 -ts4 -sob -l200 -ss -bl -bli 0 -npsl
 ===================================================================================
 统计所有文件的数量
 ls -lR | grep "^-"|wc -l

 统计所有文件和文件夹的数量
 ls -lR |wc -l

 统计当前文件的数量
 ls -l | grep "^-"|wc -l

 统计当前文件和文件夹的数量
 ls -l |wc -l
 ===================================================================================
 size teminal size 
 min: ctrl -   max: ctrl + shift + +
 ===================================================================================
 command-t split window : ctrl + v
 ===================================================================================
 vim man :  shift + k
 ===================================================================================
 update linux time :sudo ntpdate cn.pool.ntp.org
 ===================================================================================
 gen kernel tags with dts/i Makefil/Kconfig : cp ~/shell_my/unexeshell/old_patch/tags.sh scripts/tags.sh
 ===================================================================================
use  fallocate to quick create a file
 ===================================================================================
 ********************FOR doxygen gen API and call png*******************************
 1: install soft : sudo apt-get install doxygen doxygen-doc doxygen-gui graphviz
 2: mkdir "your_proj_ays_dir"
 3: cp ~/shell_my/unexeshell/Doxyfile "your_proj_ays_dir/"
 4: vim your_proj_ays_dir/Doxyfile modify INPUT to source_dir eg : ../fs/
 5: doxygen Doxyfile
 ===================================================================================
 update android ramdisk from out dir:
 rm -rf out/target/product/xxxx/ramdisk.img  ; make ramdisk-nodeps ; rm out/target/product/xxxx/boot.img ;make bootimage-nodeps
 ===================================================================================
 qemu bootloader print : -serial stdio
 show support maching:  qemu-system-arm -machine help
 show support cpu :  qemu-system-arm -machine versatileab -cpu help
 ===================================================================================
 python start env:
 import readline, rlcompleter; readline.parse_and_bind("tab: complete")
 ===================================================================================
 Flash spl:
 spl_qcom_download -p /dev/ttyUSB1 -s  13:prog_emmc_firehose_8976_ddr.mbn

 without_qcn:
 img_qcom_download --port=/dev/ttyUSB1  --sendxml=patch0.xml --search_path=.  --sendxml=rawprogram_unsparse_without_QCN.xml --search_path=. --reset

 withqcn:
 img_qcom_download --port=/dev/ttyUSB1  --sendxml=patch0.xml --search_path=.  --sendxml=rawprogram_unsparse.xml  --search_path=. --reset
 ===================================================================================
 split tar file :
 tar -zcvf -  xxxxxx/  | split -d -b 4000M - xxxxxx.tar.gz
 ===================================================================================
 png to jpg :
 convert xx.png xx.jpg
 ===================================================================================
