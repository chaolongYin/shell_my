#!/bin/bash
function print_usage(){
echo Usage
echo "$0 paramter1 [paramter2]"
echo "paramter1:"
echo "		mtk_kk_old_kernel_cscope "
echo "		arm32_cscope arm64_cscope normal_cscope "
echo "		ctags_base_cscope_files "
echo "		arm64_cscope_ctags arm32_cscope_ctags normal_cscope_ctags"
echo "paramter2:"
echo "int delay for loop update, default 15s"
echo "eg: auto_updatecscope arm64_cscope_ctags 20"
}

function my_sleep_delay(){
for((t=1;t<=$1;t++))
do
	echo -ne "\r<$[$1-$t]>:::::::::::::::::::next time wait time <$[$1-$t]> s..."
	sleep 1
done
}
function run_update(){
echo ===================================================================================
for((i=1;;i++))
do
date
echo ":::::::::::update count = $i"
other_shell $1
if [ $# -eq 1 ]
then
	echo "find one paramter ,set cycle to default time 15s "
	#sleep 15
	my_sleep_delay 15
else
	echo "update database after $2s"
	#sleep $2
	my_sleep_delay $2
fi
echo
echo ====================================================================================
done
}


function check_parameter_number(){
if [[ ! $# -eq 2 && ! $# -eq 1 ]]
then
	echo ">>>>>>>>>>>>>>>>>>Need two paramters or one paramter<<<<<<<<<<<<<<<"
	echo "just show usage"
	print_usage
	exit 0
fi
}

function check_first_parameter(){
if [[ ! $1 == "arm32_cscope" && ! $1 == "arm64_cscope" && ! $1 == "mtk_kk_old_kernel_cscope" && ! $1 == "normal_cscope" \
	&& ! $1 == "ctags_base_cscope_files" && ! $1 == "arm64_cscope_ctags" && ! $1 == "arm32_cscope_ctags" \
	&& ! $1 == "normal_cscope_ctags" ]]
then
echo "first parameter out of range, pls check usage"
echo "just show Usage"
print_usage
exit 0
fi
}

function checkint(){
if [ $# -eq 2 ]
then
if [ "$2" -gt 0 ] 2>/dev/null ;then 
  echo "$2 is number." 
else 
  echo "err:>>>>>>>>second args should be a int number : cycle for update databasee typical value: 15" 
  print_usage
  exit 0
fi
else
	echo "only one parameter, ignore check arg2"
fi
}

######################################
check_parameter_number $@
check_first_parameter $@
checkint $@
run_update $@
